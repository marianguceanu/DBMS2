<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FightingGymDBDataSet" targetNamespace="http://tempuri.org/FightingGymDBDataSet.xsd" xmlns:mstns="http://tempuri.org/FightingGymDBDataSet.xsd" xmlns="http://tempuri.org/FightingGymDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="FightingGymDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="FightingGymDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.dbms1.Properties.Settings.GlobalReference.Default.FightingGymDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassTableAdapter" GeneratorDataComponentClassName="ClassTableAdapter" Name="Class" UserDataComponentName="ClassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Class] WHERE (([cid] = @Original_cid) AND ([years_of_exp_req] = @Original_years_of_exp_req) AND ([tid] = @Original_tid) AND ((@IsNull_class_name = 1 AND [class_name] IS NULL) OR ([class_name] = @Original_class_name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_years_of_exp_req" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp_req" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_class_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="class_name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_class_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Class] ([years_of_exp_req], [tid], [class_name]) VALUES (@years_of_exp_req, @tid, @class_name);
SELECT cid, years_of_exp_req, tid, class_name FROM Class WHERE (cid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@years_of_exp_req" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp_req" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@class_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT cid, years_of_exp_req, tid, class_name FROM dbo.Class</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Class] SET [years_of_exp_req] = @years_of_exp_req, [tid] = @tid, [class_name] = @class_name WHERE (([cid] = @Original_cid) AND ([years_of_exp_req] = @Original_years_of_exp_req) AND ([tid] = @Original_tid) AND ((@IsNull_class_name = 1 AND [class_name] IS NULL) OR ([class_name] = @Original_class_name)));
SELECT cid, years_of_exp_req, tid, class_name FROM Class WHERE (cid = @cid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@years_of_exp_req" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp_req" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@class_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_years_of_exp_req" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp_req" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_class_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="class_name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_class_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="class_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="cid" ColumnName="cid" DataSourceName="FightingGymDB.dbo.Class" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="cid" DataSetColumn="cid" />
              <Mapping SourceColumn="years_of_exp_req" DataSetColumn="years_of_exp_req" />
              <Mapping SourceColumn="tid" DataSetColumn="tid" />
              <Mapping SourceColumn="class_name" DataSetColumn="class_name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT cid, years_of_exp_req, tid, class_name FROM dbo.Class</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FightingMatchTableAdapter" GeneratorDataComponentClassName="FightingMatchTableAdapter" Name="FightingMatch" UserDataComponentName="FightingMatchTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.FightingMatch" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[FightingMatch] WHERE (([mtid] = @Original_mtid) AND ([stid] = @Original_stid) AND ((@IsNull_match_date = 1 AND [match_date] IS NULL) OR ([match_date] = @Original_match_date)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_mtid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="mtid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_match_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="match_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_match_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="match_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[FightingMatch] ([stid], [match_date]) VALUES (@stid, @match_date);
SELECT mtid, stid, match_date FROM FightingMatch WHERE (mtid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@match_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="match_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT mtid, stid, match_date FROM dbo.FightingMatch</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[FightingMatch] SET [stid] = @stid, [match_date] = @match_date WHERE (([mtid] = @Original_mtid) AND ([stid] = @Original_stid) AND ((@IsNull_match_date = 1 AND [match_date] IS NULL) OR ([match_date] = @Original_match_date)));
SELECT mtid, stid, match_date FROM FightingMatch WHERE (mtid = @mtid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@match_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="match_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_mtid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="mtid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_match_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="match_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_match_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="match_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="mtid" ColumnName="mtid" DataSourceName="FightingGymDB.dbo.FightingMatch" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@mtid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="mtid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="mtid" DataSetColumn="mtid" />
              <Mapping SourceColumn="stid" DataSetColumn="stid" />
              <Mapping SourceColumn="match_date" DataSetColumn="match_date" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GloveTableAdapter" GeneratorDataComponentClassName="GloveTableAdapter" Name="Glove" UserDataComponentName="GloveTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Glove" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Glove] WHERE (([gid] = @Original_gid) AND ([material] = @Original_material) AND ((@IsNull_stid = 1 AND [stid] IS NULL) OR ([stid] = @Original_stid)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_material" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="material" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Glove] ([material], [stid]) VALUES (@material, @stid);
SELECT gid, material, stid FROM Glove WHERE (gid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@material" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="material" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT gid, material, stid FROM dbo.Glove</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Glove] SET [material] = @material, [stid] = @stid WHERE (([gid] = @Original_gid) AND ([material] = @Original_material) AND ((@IsNull_stid = 1 AND [stid] IS NULL) OR ([stid] = @Original_stid)));
SELECT gid, material, stid FROM Glove WHERE (gid = @gid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@material" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="material" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_material" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="material" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="gid" ColumnName="gid" DataSourceName="FightingGymDB.dbo.Glove" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="gid" DataSetColumn="gid" />
              <Mapping SourceColumn="material" DataSetColumn="material" />
              <Mapping SourceColumn="stid" DataSetColumn="stid" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LessonTableAdapter" GeneratorDataComponentClassName="LessonTableAdapter" Name="Lesson" UserDataComponentName="LessonTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Lesson" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Lesson] WHERE (([cid] = @Original_cid) AND ([stid] = @Original_stid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Lesson] ([cid], [stid]) VALUES (@cid, @stid);
SELECT cid, stid FROM Lesson WHERE (cid = @cid) AND (stid = @stid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT cid, stid FROM dbo.Lesson</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Lesson] SET [cid] = @cid, [stid] = @stid WHERE (([cid] = @Original_cid) AND ([stid] = @Original_stid));
SELECT cid, stid FROM Lesson WHERE (cid = @cid) AND (stid = @stid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="cid" DataSetColumn="cid" />
              <Mapping SourceColumn="stid" DataSetColumn="stid" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MaterialsTableAdapter" GeneratorDataComponentClassName="MaterialsTableAdapter" Name="Materials" UserDataComponentName="MaterialsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Materials" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Materials] WHERE (([mid] = @Original_mid) AND ((@IsNull_mname = 1 AND [mname] IS NULL) OR ([mname] = @Original_mname)) AND ([cid] = @Original_cid) AND ((@IsNull_price = 1 AND [price] IS NULL) OR ([price] = @Original_price)) AND ((@IsNull_quant = 1 AND [quant] IS NULL) OR ([quant] = @Original_quant)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_mid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="mid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_mname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="mname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_mname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="mname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_quant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quant" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quant" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Materials] ([mname], [cid], [price], [quant]) VALUES (@mname, @cid, @price, @quant);
SELECT mid, mname, cid, price, quant FROM Materials WHERE (mid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@mname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="mname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quant" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT mid, mname, cid, price, quant FROM dbo.Materials</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Materials] SET [mname] = @mname, [cid] = @cid, [price] = @price, [quant] = @quant WHERE (([mid] = @Original_mid) AND ((@IsNull_mname = 1 AND [mname] IS NULL) OR ([mname] = @Original_mname)) AND ([cid] = @Original_cid) AND ((@IsNull_price = 1 AND [price] IS NULL) OR ([price] = @Original_price)) AND ((@IsNull_quant = 1 AND [quant] IS NULL) OR ([quant] = @Original_quant)));
SELECT mid, mname, cid, price, quant FROM Materials WHERE (mid = @mid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@mname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="mname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quant" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_mid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="mid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_mname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="mname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_mname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="mname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_quant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quant" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quant" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="mid" ColumnName="mid" DataSourceName="FightingGymDB.dbo.Materials" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@mid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="mid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="mid" DataSetColumn="mid" />
              <Mapping SourceColumn="mname" DataSetColumn="mname" />
              <Mapping SourceColumn="cid" DataSetColumn="cid" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="quant" DataSetColumn="quant" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PaymentTableAdapter" GeneratorDataComponentClassName="PaymentTableAdapter" Name="Payment" UserDataComponentName="PaymentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Payment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Payment] WHERE (([stid] = @Original_stid) AND ([memebership] = @Original_memebership) AND ([daily] = @Original_daily))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_memebership" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="memebership" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_daily" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="daily" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Payment] ([stid], [memebership], [daily]) VALUES (@stid, @memebership, @daily);
SELECT stid, memebership, daily FROM Payment WHERE (stid = @stid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@memebership" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="memebership" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@daily" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="daily" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT stid, memebership, daily FROM dbo.Payment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Payment] SET [stid] = @stid, [memebership] = @memebership, [daily] = @daily WHERE (([stid] = @Original_stid) AND ([memebership] = @Original_memebership) AND ([daily] = @Original_daily));
SELECT stid, memebership, daily FROM Payment WHERE (stid = @stid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@memebership" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="memebership" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@daily" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="daily" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_memebership" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="memebership" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_daily" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="daily" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="stid" DataSetColumn="stid" />
              <Mapping SourceColumn="memebership" DataSetColumn="memebership" />
              <Mapping SourceColumn="daily" DataSetColumn="daily" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SalaryTableAdapter" GeneratorDataComponentClassName="SalaryTableAdapter" Name="Salary" UserDataComponentName="SalaryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Salary" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Salary] WHERE (([tid] = @Original_tid) AND ([amount] = @Original_amount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Salary] ([tid], [amount]) VALUES (@tid, @amount);
SELECT tid, amount FROM Salary WHERE (tid = @tid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT tid, amount FROM dbo.Salary</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Salary] SET [tid] = @tid, [amount] = @amount WHERE (([tid] = @Original_tid) AND ([amount] = @Original_amount));
SELECT tid, amount FROM Salary WHERE (tid = @tid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="tid" DataSetColumn="tid" />
              <Mapping SourceColumn="amount" DataSetColumn="amount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([stid] = @Original_stid) AND ([full_name] = @Original_full_name) AND ([years_of_exp] = @Original_years_of_exp))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_years_of_exp" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([full_name], [years_of_exp]) VALUES (@full_name, @years_of_exp);
SELECT stid, full_name, years_of_exp FROM Student WHERE (stid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@years_of_exp" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT stid, full_name, years_of_exp FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [full_name] = @full_name, [years_of_exp] = @years_of_exp WHERE (([stid] = @Original_stid) AND ([full_name] = @Original_full_name) AND ([years_of_exp] = @Original_years_of_exp));
SELECT stid, full_name, years_of_exp FROM Student WHERE (stid = @stid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@years_of_exp" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_years_of_exp" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="years_of_exp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="stid" ColumnName="stid" DataSourceName="FightingGymDB.dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="stid" DataSetColumn="stid" />
              <Mapping SourceColumn="full_name" DataSetColumn="full_name" />
              <Mapping SourceColumn="years_of_exp" DataSetColumn="years_of_exp" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeacherTableAdapter" GeneratorDataComponentClassName="TeacherTableAdapter" Name="Teacher" UserDataComponentName="TeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Teacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teacher] WHERE (([tid] = @Original_tid) AND ([full_name] = @Original_full_name) AND ((@IsNull_diploma = 1 AND [diploma] IS NULL) OR ([diploma] = @Original_diploma)) AND ((@IsNull_studid = 1 AND [studid] IS NULL) OR ([studid] = @Original_studid)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_diploma" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="diploma" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_diploma" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="diploma" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_studid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teacher] ([full_name], [diploma], [studid]) VALUES (@full_name, @diploma, @studid);
SELECT tid, full_name, diploma, studid FROM Teacher WHERE (tid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@diploma" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="diploma" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT tid, full_name, diploma, studid FROM dbo.Teacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teacher] SET [full_name] = @full_name, [diploma] = @diploma, [studid] = @studid WHERE (([tid] = @Original_tid) AND ([full_name] = @Original_full_name) AND ((@IsNull_diploma = 1 AND [diploma] IS NULL) OR ([diploma] = @Original_diploma)) AND ((@IsNull_studid = 1 AND [studid] IS NULL) OR ([studid] = @Original_studid)));
SELECT tid, full_name, diploma, studid FROM Teacher WHERE (tid = @tid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@diploma" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="diploma" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_full_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="full_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_diploma" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="diploma" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_diploma" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="diploma" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_studid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="tid" ColumnName="tid" DataSourceName="FightingGymDB.dbo.Teacher" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="tid" DataSetColumn="tid" />
              <Mapping SourceColumn="full_name" DataSetColumn="full_name" />
              <Mapping SourceColumn="diploma" DataSetColumn="diploma" />
              <Mapping SourceColumn="studid" DataSetColumn="studid" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TrophyTableAdapter" GeneratorDataComponentClassName="TrophyTableAdapter" Name="Trophy" UserDataComponentName="TrophyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FightingGymDBConnectionString (Settings)" DbObjectName="FightingGymDB.dbo.Trophy" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Trophy] WHERE (([tid] = @Original_tid) AND ((@IsNull_stid = 1 AND [stid] IS NULL) OR ([stid] = @Original_stid)) AND ((@IsNull_place = 1 AND [place] IS NULL) OR ([place] = @Original_place)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_place" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="place" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_place" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="place" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Trophy] ([stid], [place]) VALUES (@stid, @place);
SELECT tid, stid, place FROM Trophy WHERE (tid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@place" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="place" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT tid, stid, place FROM dbo.Trophy</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Trophy] SET [stid] = @stid, [place] = @place WHERE (([tid] = @Original_tid) AND ((@IsNull_stid = 1 AND [stid] IS NULL) OR ([stid] = @Original_stid)) AND ((@IsNull_place = 1 AND [place] IS NULL) OR ([place] = @Original_place)));
SELECT tid, stid, place FROM Trophy WHERE (tid = @tid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@place" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="place" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_place" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="place" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_place" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="place" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="tid" ColumnName="tid" DataSourceName="FightingGymDB.dbo.Trophy" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="tid" DataSetColumn="tid" />
              <Mapping SourceColumn="stid" DataSetColumn="stid" />
              <Mapping SourceColumn="place" DataSetColumn="place" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FightingGymDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="FightingGymDBDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="FightingGymDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Class" msprop:Generator_RowClassName="ClassRow" msprop:Generator_RowEvHandlerName="ClassRowChangeEventHandler" msprop:Generator_RowDeletedName="ClassRowDeleted" msprop:Generator_RowDeletingName="ClassRowDeleting" msprop:Generator_RowEvArgName="ClassRowChangeEvent" msprop:Generator_TablePropName="Class" msprop:Generator_RowChangedName="ClassRowChanged" msprop:Generator_UserTableName="Class" msprop:Generator_RowChangingName="ClassRowChanging" msprop:Generator_TableClassName="ClassDataTable" msprop:Generator_TableVarName="tableClass">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="cid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="cid" msprop:Generator_ColumnPropNameInTable="cidColumn" msprop:Generator_ColumnPropNameInRow="cid" msprop:Generator_ColumnVarNameInTable="columncid" type="xs:int" />
              <xs:element name="years_of_exp_req" msprop:Generator_UserColumnName="years_of_exp_req" msprop:Generator_ColumnPropNameInTable="years_of_exp_reqColumn" msprop:Generator_ColumnPropNameInRow="years_of_exp_req" msprop:Generator_ColumnVarNameInTable="columnyears_of_exp_req" type="xs:int" />
              <xs:element name="tid" msprop:Generator_UserColumnName="tid" msprop:Generator_ColumnPropNameInTable="tidColumn" msprop:Generator_ColumnPropNameInRow="tid" msprop:Generator_ColumnVarNameInTable="columntid" type="xs:int" />
              <xs:element name="class_name" msprop:Generator_UserColumnName="class_name" msprop:Generator_ColumnPropNameInTable="class_nameColumn" msprop:Generator_ColumnPropNameInRow="class_name" msprop:Generator_ColumnVarNameInTable="columnclass_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="FightingMatch" msprop:Generator_RowClassName="FightingMatchRow" msprop:Generator_RowEvHandlerName="FightingMatchRowChangeEventHandler" msprop:Generator_RowDeletedName="FightingMatchRowDeleted" msprop:Generator_RowDeletingName="FightingMatchRowDeleting" msprop:Generator_RowEvArgName="FightingMatchRowChangeEvent" msprop:Generator_TablePropName="FightingMatch" msprop:Generator_RowChangedName="FightingMatchRowChanged" msprop:Generator_UserTableName="FightingMatch" msprop:Generator_RowChangingName="FightingMatchRowChanging" msprop:Generator_TableClassName="FightingMatchDataTable" msprop:Generator_TableVarName="tableFightingMatch">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="mtid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="mtid" msprop:Generator_ColumnPropNameInTable="mtidColumn" msprop:Generator_ColumnPropNameInRow="mtid" msprop:Generator_ColumnVarNameInTable="columnmtid" type="xs:int" />
              <xs:element name="stid" msprop:Generator_UserColumnName="stid" msprop:Generator_ColumnPropNameInTable="stidColumn" msprop:Generator_ColumnPropNameInRow="stid" msprop:Generator_ColumnVarNameInTable="columnstid" type="xs:int" />
              <xs:element name="match_date" msprop:Generator_UserColumnName="match_date" msprop:Generator_ColumnPropNameInTable="match_dateColumn" msprop:Generator_ColumnPropNameInRow="match_date" msprop:Generator_ColumnVarNameInTable="columnmatch_date" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Glove" msprop:Generator_RowClassName="GloveRow" msprop:Generator_RowEvHandlerName="GloveRowChangeEventHandler" msprop:Generator_RowDeletedName="GloveRowDeleted" msprop:Generator_RowDeletingName="GloveRowDeleting" msprop:Generator_RowEvArgName="GloveRowChangeEvent" msprop:Generator_TablePropName="Glove" msprop:Generator_RowChangedName="GloveRowChanged" msprop:Generator_UserTableName="Glove" msprop:Generator_RowChangingName="GloveRowChanging" msprop:Generator_TableClassName="GloveDataTable" msprop:Generator_TableVarName="tableGlove">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="gid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="gid" msprop:Generator_ColumnPropNameInTable="gidColumn" msprop:Generator_ColumnPropNameInRow="gid" msprop:Generator_ColumnVarNameInTable="columngid" type="xs:int" />
              <xs:element name="material" msprop:Generator_UserColumnName="material" msprop:Generator_ColumnPropNameInTable="materialColumn" msprop:Generator_ColumnPropNameInRow="material" msprop:Generator_ColumnVarNameInTable="columnmaterial">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="stid" msprop:Generator_UserColumnName="stid" msprop:Generator_ColumnPropNameInTable="stidColumn" msprop:Generator_ColumnPropNameInRow="stid" msprop:Generator_ColumnVarNameInTable="columnstid" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Lesson" msprop:Generator_RowClassName="LessonRow" msprop:Generator_RowEvHandlerName="LessonRowChangeEventHandler" msprop:Generator_RowDeletedName="LessonRowDeleted" msprop:Generator_RowDeletingName="LessonRowDeleting" msprop:Generator_RowEvArgName="LessonRowChangeEvent" msprop:Generator_TablePropName="Lesson" msprop:Generator_RowChangedName="LessonRowChanged" msprop:Generator_UserTableName="Lesson" msprop:Generator_RowChangingName="LessonRowChanging" msprop:Generator_TableClassName="LessonDataTable" msprop:Generator_TableVarName="tableLesson">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="cid" msprop:Generator_UserColumnName="cid" msprop:Generator_ColumnPropNameInTable="cidColumn" msprop:Generator_ColumnPropNameInRow="cid" msprop:Generator_ColumnVarNameInTable="columncid" type="xs:int" />
              <xs:element name="stid" msprop:Generator_UserColumnName="stid" msprop:Generator_ColumnPropNameInTable="stidColumn" msprop:Generator_ColumnPropNameInRow="stid" msprop:Generator_ColumnVarNameInTable="columnstid" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Materials" msprop:Generator_RowClassName="MaterialsRow" msprop:Generator_RowEvHandlerName="MaterialsRowChangeEventHandler" msprop:Generator_RowDeletedName="MaterialsRowDeleted" msprop:Generator_RowDeletingName="MaterialsRowDeleting" msprop:Generator_RowEvArgName="MaterialsRowChangeEvent" msprop:Generator_TablePropName="Materials" msprop:Generator_RowChangedName="MaterialsRowChanged" msprop:Generator_UserTableName="Materials" msprop:Generator_RowChangingName="MaterialsRowChanging" msprop:Generator_TableClassName="MaterialsDataTable" msprop:Generator_TableVarName="tableMaterials">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="mid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="mid" msprop:Generator_ColumnPropNameInTable="midColumn" msprop:Generator_ColumnPropNameInRow="mid" msprop:Generator_ColumnVarNameInTable="columnmid" type="xs:int" />
              <xs:element name="mname" msprop:Generator_UserColumnName="mname" msprop:Generator_ColumnPropNameInTable="mnameColumn" msprop:Generator_ColumnPropNameInRow="mname" msprop:Generator_ColumnVarNameInTable="columnmname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cid" msprop:Generator_UserColumnName="cid" msprop:Generator_ColumnPropNameInTable="cidColumn" msprop:Generator_ColumnPropNameInRow="cid" msprop:Generator_ColumnVarNameInTable="columncid" type="xs:int" />
              <xs:element name="price" msprop:Generator_UserColumnName="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnVarNameInTable="columnprice" type="xs:int" minOccurs="0" />
              <xs:element name="quant" msprop:Generator_UserColumnName="quant" msprop:Generator_ColumnPropNameInTable="quantColumn" msprop:Generator_ColumnPropNameInRow="quant" msprop:Generator_ColumnVarNameInTable="columnquant" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Payment" msprop:Generator_RowClassName="PaymentRow" msprop:Generator_RowEvHandlerName="PaymentRowChangeEventHandler" msprop:Generator_RowDeletedName="PaymentRowDeleted" msprop:Generator_RowDeletingName="PaymentRowDeleting" msprop:Generator_RowEvArgName="PaymentRowChangeEvent" msprop:Generator_TablePropName="Payment" msprop:Generator_RowChangedName="PaymentRowChanged" msprop:Generator_UserTableName="Payment" msprop:Generator_RowChangingName="PaymentRowChanging" msprop:Generator_TableClassName="PaymentDataTable" msprop:Generator_TableVarName="tablePayment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="stid" msprop:Generator_UserColumnName="stid" msprop:Generator_ColumnPropNameInTable="stidColumn" msprop:Generator_ColumnPropNameInRow="stid" msprop:Generator_ColumnVarNameInTable="columnstid" type="xs:int" />
              <xs:element name="memebership" msprop:Generator_UserColumnName="memebership" msprop:Generator_ColumnPropNameInTable="memebershipColumn" msprop:Generator_ColumnPropNameInRow="memebership" msprop:Generator_ColumnVarNameInTable="columnmemebership" type="xs:base64Binary" />
              <xs:element name="daily" msprop:Generator_UserColumnName="daily" msprop:Generator_ColumnPropNameInTable="dailyColumn" msprop:Generator_ColumnPropNameInRow="daily" msprop:Generator_ColumnVarNameInTable="columndaily" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Salary" msprop:Generator_RowClassName="SalaryRow" msprop:Generator_RowEvHandlerName="SalaryRowChangeEventHandler" msprop:Generator_RowDeletedName="SalaryRowDeleted" msprop:Generator_RowDeletingName="SalaryRowDeleting" msprop:Generator_RowEvArgName="SalaryRowChangeEvent" msprop:Generator_TablePropName="Salary" msprop:Generator_RowChangedName="SalaryRowChanged" msprop:Generator_UserTableName="Salary" msprop:Generator_RowChangingName="SalaryRowChanging" msprop:Generator_TableClassName="SalaryDataTable" msprop:Generator_TableVarName="tableSalary">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="tid" msprop:Generator_UserColumnName="tid" msprop:Generator_ColumnPropNameInTable="tidColumn" msprop:Generator_ColumnPropNameInRow="tid" msprop:Generator_ColumnVarNameInTable="columntid" type="xs:int" />
              <xs:element name="amount" msprop:Generator_UserColumnName="amount" msprop:Generator_ColumnPropNameInTable="amountColumn" msprop:Generator_ColumnPropNameInRow="amount" msprop:Generator_ColumnVarNameInTable="columnamount" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_RowClassName="StudentRow" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_TablePropName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_UserTableName="Student" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="stid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="stid" msprop:Generator_ColumnPropNameInTable="stidColumn" msprop:Generator_ColumnPropNameInRow="stid" msprop:Generator_ColumnVarNameInTable="columnstid" type="xs:int" />
              <xs:element name="full_name" msprop:Generator_UserColumnName="full_name" msprop:Generator_ColumnPropNameInTable="full_nameColumn" msprop:Generator_ColumnPropNameInRow="full_name" msprop:Generator_ColumnVarNameInTable="columnfull_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="years_of_exp" msprop:Generator_UserColumnName="years_of_exp" msprop:Generator_ColumnPropNameInTable="years_of_expColumn" msprop:Generator_ColumnPropNameInRow="years_of_exp" msprop:Generator_ColumnVarNameInTable="columnyears_of_exp" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teacher" msprop:Generator_RowClassName="TeacherRow" msprop:Generator_RowEvHandlerName="TeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="TeacherRowDeleted" msprop:Generator_RowDeletingName="TeacherRowDeleting" msprop:Generator_RowEvArgName="TeacherRowChangeEvent" msprop:Generator_TablePropName="Teacher" msprop:Generator_RowChangedName="TeacherRowChanged" msprop:Generator_UserTableName="Teacher" msprop:Generator_RowChangingName="TeacherRowChanging" msprop:Generator_TableClassName="TeacherDataTable" msprop:Generator_TableVarName="tableTeacher">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="tid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="tid" msprop:Generator_ColumnPropNameInTable="tidColumn" msprop:Generator_ColumnPropNameInRow="tid" msprop:Generator_ColumnVarNameInTable="columntid" type="xs:int" />
              <xs:element name="full_name" msprop:Generator_UserColumnName="full_name" msprop:Generator_ColumnPropNameInTable="full_nameColumn" msprop:Generator_ColumnPropNameInRow="full_name" msprop:Generator_ColumnVarNameInTable="columnfull_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="diploma" msprop:Generator_UserColumnName="diploma" msprop:Generator_ColumnPropNameInTable="diplomaColumn" msprop:Generator_ColumnPropNameInRow="diploma" msprop:Generator_ColumnVarNameInTable="columndiploma" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="studid" msprop:Generator_UserColumnName="studid" msprop:Generator_ColumnPropNameInTable="studidColumn" msprop:Generator_ColumnPropNameInRow="studid" msprop:Generator_ColumnVarNameInTable="columnstudid" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Trophy" msprop:Generator_RowClassName="TrophyRow" msprop:Generator_RowEvHandlerName="TrophyRowChangeEventHandler" msprop:Generator_RowDeletedName="TrophyRowDeleted" msprop:Generator_RowDeletingName="TrophyRowDeleting" msprop:Generator_RowEvArgName="TrophyRowChangeEvent" msprop:Generator_TablePropName="Trophy" msprop:Generator_RowChangedName="TrophyRowChanged" msprop:Generator_UserTableName="Trophy" msprop:Generator_RowChangingName="TrophyRowChanging" msprop:Generator_TableClassName="TrophyDataTable" msprop:Generator_TableVarName="tableTrophy">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="tid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="tid" msprop:Generator_ColumnPropNameInTable="tidColumn" msprop:Generator_ColumnPropNameInRow="tid" msprop:Generator_ColumnVarNameInTable="columntid" type="xs:int" />
              <xs:element name="stid" msprop:Generator_UserColumnName="stid" msprop:Generator_ColumnPropNameInTable="stidColumn" msprop:Generator_ColumnPropNameInRow="stid" msprop:Generator_ColumnVarNameInTable="columnstid" type="xs:int" minOccurs="0" />
              <xs:element name="place" msprop:Generator_UserColumnName="place" msprop:Generator_ColumnPropNameInTable="placeColumn" msprop:Generator_ColumnPropNameInRow="place" msprop:Generator_ColumnVarNameInTable="columnplace" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Class" />
      <xs:field xpath="mstns:cid" />
    </xs:unique>
    <xs:unique name="FightingMatch_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:FightingMatch" />
      <xs:field xpath="mstns:mtid" />
    </xs:unique>
    <xs:unique name="Glove_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Glove" />
      <xs:field xpath="mstns:gid" />
    </xs:unique>
    <xs:unique name="Lesson_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Lesson" />
      <xs:field xpath="mstns:cid" />
      <xs:field xpath="mstns:stid" />
    </xs:unique>
    <xs:unique name="Materials_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Materials" />
      <xs:field xpath="mstns:mid" />
    </xs:unique>
    <xs:unique name="Payment_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Payment" />
      <xs:field xpath="mstns:stid" />
    </xs:unique>
    <xs:unique name="Salary_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Salary" />
      <xs:field xpath="mstns:tid" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:stid" />
    </xs:unique>
    <xs:unique name="Teacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teacher" />
      <xs:field xpath="mstns:tid" />
    </xs:unique>
    <xs:unique name="Trophy_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Trophy" />
      <xs:field xpath="mstns:tid" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Class" msdata:parent="Teacher" msdata:child="Class" msdata:parentkey="tid" msdata:childkey="tid" msprop:Generator_UserParentTable="Teacher" msprop:Generator_UserChildTable="Class" msprop:Generator_RelationVarName="relationFK_Class" msprop:Generator_ChildPropName="GetClassRows" msprop:Generator_ParentPropName="TeacherRow" msprop:Generator_UserRelationName="FK_Class" />
      <msdata:Relationship name="FK_FightingMatch" msdata:parent="Student" msdata:child="FightingMatch" msdata:parentkey="stid" msdata:childkey="stid" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="FightingMatch" msprop:Generator_RelationVarName="relationFK_FightingMatch" msprop:Generator_ChildPropName="GetFightingMatchRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_FightingMatch" />
      <msdata:Relationship name="FK_Glove" msdata:parent="Student" msdata:child="Glove" msdata:parentkey="stid" msdata:childkey="stid" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Glove" msprop:Generator_RelationVarName="relationFK_Glove" msprop:Generator_ChildPropName="GetGloveRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_Glove" />
      <msdata:Relationship name="FK_Lesson1" msdata:parent="Class" msdata:child="Lesson" msdata:parentkey="cid" msdata:childkey="cid" msprop:Generator_UserParentTable="Class" msprop:Generator_UserChildTable="Lesson" msprop:Generator_RelationVarName="relationFK_Lesson1" msprop:Generator_ChildPropName="GetLessonRows" msprop:Generator_UserRelationName="FK_Lesson1" msprop:Generator_ParentPropName="ClassRow" />
      <msdata:Relationship name="FK_Lesson2" msdata:parent="Student" msdata:child="Lesson" msdata:parentkey="stid" msdata:childkey="stid" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Lesson" msprop:Generator_RelationVarName="relationFK_Lesson2" msprop:Generator_ChildPropName="GetLessonRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_Lesson2" />
      <msdata:Relationship name="FK_Materials" msdata:parent="Class" msdata:child="Materials" msdata:parentkey="cid" msdata:childkey="cid" msprop:Generator_UserParentTable="Class" msprop:Generator_UserChildTable="Materials" msprop:Generator_RelationVarName="relationFK_Materials" msprop:Generator_ChildPropName="GetMaterialsRows" msprop:Generator_UserRelationName="FK_Materials" msprop:Generator_ParentPropName="ClassRow" />
      <msdata:Relationship name="FK_Payment" msdata:parent="Student" msdata:child="Payment" msdata:parentkey="stid" msdata:childkey="stid" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Payment" msprop:Generator_RelationVarName="relationFK_Payment" msprop:Generator_ChildPropName="GetPaymentRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_Payment" />
      <msdata:Relationship name="FK_Salary" msdata:parent="Teacher" msdata:child="Salary" msdata:parentkey="tid" msdata:childkey="tid" msprop:Generator_UserParentTable="Teacher" msprop:Generator_UserChildTable="Salary" msprop:Generator_RelationVarName="relationFK_Salary" msprop:Generator_ChildPropName="GetSalaryRows" msprop:Generator_ParentPropName="TeacherRow" msprop:Generator_UserRelationName="FK_Salary" />
      <msdata:Relationship name="FK_Teacher" msdata:parent="Student" msdata:child="Teacher" msdata:parentkey="stid" msdata:childkey="studid" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Teacher" msprop:Generator_RelationVarName="relationFK_Teacher" msprop:Generator_ChildPropName="GetTeacherRows" msprop:Generator_UserRelationName="FK_Teacher" msprop:Generator_ParentPropName="StudentRow" />
      <msdata:Relationship name="FK_Trophy" msdata:parent="Student" msdata:child="Trophy" msdata:parentkey="stid" msdata:childkey="stid" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Trophy" msprop:Generator_RelationVarName="relationFK_Trophy" msprop:Generator_ChildPropName="GetTrophyRows" msprop:Generator_UserRelationName="FK_Trophy" msprop:Generator_ParentPropName="StudentRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>